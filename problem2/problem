You are given a sorted array a1,a2,...,an (for each index i > 1 condition ai ≥ ai−1 holds) and an
integer k.

You are asked to divide this array into k non-empty consecutive subarrays. Every element in
the array should be included in exactly one subarray.

Let max(i) be equal to the maximum in the i-th subarray, and min(i) be equal to the minimum
in the i-th subarray. The cost of division is equal to i = 1k(max(i)2−min(i)2). For example, if
a=[2,4,5,5,8,11,19] and we divide it into 3 subarrays in the following way: [2,4],[5,5],[8,11,19],
then the cost of division is equal to (4^2−2^2)+(5^2−5^2)+(19^2−8^2) = 309.

Calculate the minimum cost you can obtain by dividing the array a into k non-empty
consecutive subarrays.

Input
The first line contains two integers n and k (1 ≤ k ≤ n ≤ 3*10^5).
The second line contains n integers a1,a2,...,an (1 ≤ ai ≤ 10^9, ai ≥ ai − 1).

Output
Print the minimum cost you can obtain by dividing the array a into k nonempty
consecutive subarrays.
Input
6 3
4 8 15 16 23 42
Output
240

Input
4 4
1 3 3 7
Output
0